// Generated by Selenium IDE
const { Builder, By, Key, until } = require("selenium-webdriver");
const assert = require("assert");

describe("RatingPosts", function () {
  this.timeout(30000);
  let driver;
  let vars;
  beforeEach(async function () {
    driver = await new Builder().forBrowser("chrome").build();
    vars = {};
  });
  afterEach(async function () {
    await driver.quit();
  });
  it("RatingPosts", async function () {
    await driver.get("http://localhost:5173/");
    await driver.sleep(3000);

    // Signing in...
    await driver.findElement(By.id("email")).click();
    await driver.findElement(By.id("email")).sendKeys("profiletest@uncw.edu");
    await driver.findElement(By.id("password")).sendKeys("test1234");
    await driver.findElement(By.id("password")).sendKeys(Key.ENTER);
    await driver.sleep(3000);
    assert(
      (await driver.switchTo().alert().getText()) == "Signed in as Leon Kennedy"
    );
    await driver.switchTo().alert().accept();
    await driver.sleep(3000);

    // Getting the value of the rating to be used for the assertion
    const ratings = await driver.findElement(By.css(".rating")).getText();

    // Clicks the upvote and downvote buttons multiple times
    // The reating value should be the same by the end or else the test will fail
    {
      await driver
        .findElement(
          By.css(
            "div:nth-child(2) > .MuiPaper-root .rating-button-container:nth-child(1) path"
          )
        )
        .click();
    }
    await driver.sleep(300);
    await driver
      .findElement(
        By.css(
          "div:nth-child(2) > .MuiPaper-root .rating-button-container:nth-child(1) path"
        )
      )
      .click();
    await driver.sleep(300);
    await driver
      .findElement(
        By.css(
          "div:nth-child(2) > .MuiPaper-root .rating-button-container:nth-child(3) .MuiSvgIcon-root"
        )
      )
      .click();
    await driver.sleep(300);
    await driver
      .findElement(
        By.css(
          "div:nth-child(2) > .MuiPaper-root .rating-button-container:nth-child(3) .MuiSvgIcon-root"
        )
      )
      .click();
    await driver.sleep(300);
    await driver
      .findElement(
        By.css(
          "div:nth-child(2) > .MuiPaper-root .rating-button-container:nth-child(1) path"
        )
      )
      .click();
    await driver.sleep(300);
    await driver
      .findElement(
        By.css(
          "div:nth-child(2) > .MuiPaper-root .rating-button-container:nth-child(3) path"
        )
      )
      .click();
    await driver.sleep(300);
    await driver
      .findElement(
        By.css(
          "div:nth-child(2) > .MuiPaper-root .rating-button-container:nth-child(3) .MuiSvgIcon-root"
        )
      )
      .click();
    await driver.sleep(300);
    await driver
      .findElement(
        By.css(
          "div:nth-child(2) > .MuiPaper-root .rating-button-container:nth-child(1) path"
        )
      )
      .click();
    await driver.sleep(300);
    await driver
      .findElement(
        By.css(
          "div:nth-child(2) > .MuiPaper-root .rating-button-container:nth-child(3) path"
        )
      )
      .click();
    await driver.sleep(300);
    await driver
      .findElement(
        By.css(
          "div:nth-child(2) > .MuiPaper-root .rating-button-container:nth-child(1) .MuiSvgIcon-root"
        )
      )
      .click();
    await driver.sleep(300);
    await driver
      .findElement(
        By.css(
          "div:nth-child(2) > .MuiPaper-root .rating-button-container:nth-child(1) .MuiSvgIcon-root"
        )
      )
      .click();
    await driver.sleep(1000);
    // Check if the ratings are the same as before
    assert((await driver.findElement(By.css(".rating")).getText()) == ratings);
  });
});
